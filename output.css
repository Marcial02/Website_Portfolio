/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@font-face {
  font-family: Astro;
  src: url('web_assets/font/astro-font/Astro-ZV68J.ttf') format('truetype');
}
@font-face {
  font-family: Hacked;
  src: url('web_assets/font/hacked-font/Hacked-KerX.ttf') format('truetype');
}
@font-face {
  font-family: Riosark;
  src: url('web_assets/font/riosark-font/riosarkregular-zpglb.otf') format('opentype');
}
@font-face {
  font-family: Toxigenesis;
  src: url('web_assets/font/toxigenesis/toxigenesis\ bd.otf') format(opentype);
}
@font-face {
  font-family: Neiko;
  src: url('web_assets/font/neiko-regular-font/NeikoRegular-XGMP2.otf') format(opentype);
}
@import url('https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap');
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-cyan-950: oklch(30.2% 0.056 229.695);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-bold: 700;
    --radius-xl: 0.75rem;
    --radius-4xl: 2rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-Astro: "Astro", "sans-serif";
    --font-Hacked: "Hacked", "sans-serif";
    --color-Cyan-Neon: #38FFEA;
    --color-Violet-Neon: #FF34AA;
    --color-Violet-Neon-Dark: rgb(66, 0, 37);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .-top-20 {
    top: calc(var(--spacing) * -20);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-1\/4 {
    top: calc(1/4 * 100%);
  }
  .top-3\/4 {
    top: calc(3/4 * 100%);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-\[10\%\] {
    top: 10%;
  }
  .top-\[14\%\] {
    top: 14%;
  }
  .top-\[15\%\] {
    top: 15%;
  }
  .top-\[20\%\] {
    top: 20%;
  }
  .top-\[22\%\] {
    top: 22%;
  }
  .top-\[30\%\] {
    top: 30%;
  }
  .top-\[32\%\] {
    top: 32%;
  }
  .top-\[35\%\] {
    top: 35%;
  }
  .top-\[38\%\] {
    top: 38%;
  }
  .top-\[40\%\] {
    top: 40%;
  }
  .top-\[43\%\] {
    top: 43%;
  }
  .top-\[45\%\] {
    top: 45%;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[51\%\] {
    top: 51%;
  }
  .top-\[55\%\] {
    top: 55%;
  }
  .top-\[57\%\] {
    top: 57%;
  }
  .top-\[57\.5\%\] {
    top: 57.5%;
  }
  .top-\[58\%\] {
    top: 58%;
  }
  .top-\[59\%\] {
    top: 59%;
  }
  .top-\[60\%\] {
    top: 60%;
  }
  .top-\[80\%\] {
    top: 80%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-\[0\%\] {
    bottom: 0%;
  }
  .bottom-\[5\%\] {
    bottom: 5%;
  }
  .bottom-\[7\.5\%\] {
    bottom: 7.5%;
  }
  .bottom-\[10\%\] {
    bottom: 10%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-20 {
    left: calc(var(--spacing) * 20);
  }
  .left-\[5\%\] {
    left: 5%;
  }
  .left-\[15\%\] {
    left: 15%;
  }
  .left-\[16\%\] {
    left: 16%;
  }
  .left-\[17\%\] {
    left: 17%;
  }
  .left-\[18\%\] {
    left: 18%;
  }
  .left-\[20\%\] {
    left: 20%;
  }
  .left-\[25\%\] {
    left: 25%;
  }
  .left-\[30\%\] {
    left: 30%;
  }
  .left-\[35\%\] {
    left: 35%;
  }
  .left-\[39\%\] {
    left: 39%;
  }
  .left-\[40\%\] {
    left: 40%;
  }
  .left-\[45\%\] {
    left: 45%;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .left-\[55\%\] {
    left: 55%;
  }
  .left-\[60\%\] {
    left: 60%;
  }
  .left-\[62\%\] {
    left: 62%;
  }
  .left-\[71\%\] {
    left: 71%;
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .mt-\[20\%\] {
    margin-top: 20%;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-18 {
    height: calc(var(--spacing) * 18);
  }
  .h-19 {
    height: calc(var(--spacing) * 19);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-25 {
    height: calc(var(--spacing) * 25);
  }
  .h-50 {
    height: calc(var(--spacing) * 50);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .h-105 {
    height: calc(var(--spacing) * 105);
  }
  .h-150 {
    height: calc(var(--spacing) * 150);
  }
  .h-1000 {
    height: calc(var(--spacing) * 1000);
  }
  .h-\[50vh\] {
    height: 50vh;
  }
  .h-\[100vh\] {
    height: 100vh;
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-7\.5 {
    width: calc(var(--spacing) * 7.5);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-15 {
    width: calc(var(--spacing) * 15);
  }
  .w-18 {
    width: calc(var(--spacing) * 18);
  }
  .w-19 {
    width: calc(var(--spacing) * 19);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-25 {
    width: calc(var(--spacing) * 25);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-75 {
    width: calc(var(--spacing) * 75);
  }
  .w-95 {
    width: calc(var(--spacing) * 95);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-105 {
    width: calc(var(--spacing) * 105);
  }
  .w-125 {
    width: calc(var(--spacing) * 125);
  }
  .w-\[24\%\] {
    width: 24%;
  }
  .w-\[40\%\] {
    width: 40%;
  }
  .w-full {
    width: 100%;
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-5 {
    border-style: var(--tw-border-style);
    border-width: 5px;
  }
  .border-10 {
    border-style: var(--tw-border-style);
    border-width: 10px;
  }
  .border-y-1 {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-y-2 {
    border-block-style: var(--tw-border-style);
    border-block-width: 2px;
  }
  .border-Cyan-Neon {
    border-color: var(--color-Cyan-Neon);
  }
  .border-Cyan-Neon\/50 {
    border-color: color-mix(in srgb, #38FFEA 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-Cyan-Neon) 50%, transparent);
    }
  }
  .border-Cyan-Neon\/80 {
    border-color: color-mix(in srgb, #38FFEA 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-Cyan-Neon) 80%, transparent);
    }
  }
  .border-Violet-Neon {
    border-color: var(--color-Violet-Neon);
  }
  .border-Violet-Neon\/70 {
    border-color: color-mix(in srgb, #FF34AA 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-Violet-Neon) 70%, transparent);
    }
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-Cyan-Neon {
    background-color: var(--color-Cyan-Neon);
  }
  .bg-Cyan-Neon\/60 {
    background-color: color-mix(in srgb, #38FFEA 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-Cyan-Neon) 60%, transparent);
    }
  }
  .bg-Violet-Neon {
    background-color: var(--color-Violet-Neon);
  }
  .bg-Violet-Neon\/10 {
    background-color: color-mix(in srgb, #FF34AA 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-Violet-Neon) 10%, transparent);
    }
  }
  .bg-Violet-Neon\/60 {
    background-color: color-mix(in srgb, #FF34AA 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-Violet-Neon) 60%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-cyan-950 {
    background-color: var(--color-cyan-950);
  }
  .bg-cyan-950\/75 {
    background-color: color-mix(in srgb, oklch(30.2% 0.056 229.695) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cyan-950) 75%, transparent);
    }
  }
  .bg-cyan-950\/80 {
    background-color: color-mix(in srgb, oklch(30.2% 0.056 229.695) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-cyan-950) 80%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-l {
    --tw-gradient-position: to left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-Cyan-Neon {
    --tw-gradient-from: var(--color-Cyan-Neon);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-Cyan-Neon\/80 {
    --tw-gradient-from: color-mix(in srgb, #38FFEA 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-Cyan-Neon) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black {
    --tw-gradient-from: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/50 {
    --tw-gradient-from: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-black\/80 {
    --tw-gradient-via: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-Cyan-Neon\/0 {
    --tw-gradient-to: color-mix(in srgb, #38FFEA 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-Cyan-Neon) 0%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-black {
    --tw-gradient-to: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-black\/0 {
    --tw-gradient-to: color-mix(in srgb, #000 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-black) 0%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-black\/50 {
    --tw-gradient-to: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-100 {
    padding: calc(var(--spacing) * 100);
  }
  .p-\[10\%\] {
    padding: 10%;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }
  .pt-7\.5 {
    padding-top: calc(var(--spacing) * 7.5);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-50 {
    padding-top: calc(var(--spacing) * 50);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-5 {
    padding-left: calc(var(--spacing) * 5);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .font-Astro {
    font-family: var(--font-Astro);
  }
  .font-Hacked {
    font-family: var(--font-Hacked);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-Cyan-Neon {
    color: var(--color-Cyan-Neon);
  }
  .text-Cyan-Neon\/80 {
    color: color-mix(in srgb, #38FFEA 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-Cyan-Neon) 80%, transparent);
    }
  }
  .text-Violet-Neon {
    color: var(--color-Violet-Neon);
  }
  .text-Violet-Neon-Dark {
    color: var(--color-Violet-Neon-Dark);
  }
  .text-cyan-950 {
    color: var(--color-cyan-950);
  }
  .text-white {
    color: var(--color-white);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .hover\:scale-150 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 150%;
        --tw-scale-y: 150%;
        --tw-scale-z: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-Cyan-Neon {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-Cyan-Neon);
      }
    }
  }
  .hover\:bg-gradient-to-l {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to left in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
